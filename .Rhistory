0.1+0.2
(0.1+0.2)-0.3
library(tidyverse)
library(stargazer)
load("C:/Users/Gard/OneDrive/Documents/STV1020/V22SeminarTing/prove/prove/siste gang/soc_survey.Rdata")
class(soc_survey$aar)
class(soc_survey$kjnn)
class(soc_survey$inntekt_prmnd)
class(soc_survey$innfl_pol)
class(soc_survey$pol_tillit)
mean(soc_survey$aar, na.rm = TRUE)
mean(soc_survey$inntekt_prmnd, na.rm = TRUE)
sd(soc_survey$aar, na.rm = TRUE)
sd(soc_survey$inntekt_prmnd, na.rm = TRUE)
ggplot(data = soc_survey, aes(x = kjnn)) + geom_bar() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
sum(is.na(soc_survey$aar))
sum(is.na(soc_survey$pol_tillit))
ggplot(data = soc_survey, aes(x = kjnn)) +
geom_boxplot(aes(y = inntekt_prmnd))
cor(x = soc_survey$inntekt_prmnd, y = soc_survey$pol_tillit,
use = "pairwise.complete.obs")
cor.test(soc_survey$inntekt_prmnd, soc_survey$pol_tillit,
use = "pairwise.complete.obs")
summary(soc_survey$aar)
dummy <- soc_survey %>%
select(aar)
dummy$dummy.aar <- factor(
ifelse(dummy$aar < median(dummy$aar, na.rm = TRUE), 1,
ifelse(dummy$aar > median(dummy$aar, na.rm = TRUE), 2, NA)),
1:2, labels = c("0", "1"))
summary(dummy$dummy.aar)
install.packages("shiny")
library(shiny)
runExample("01_hello")
runExample("02_text")
x = [1:10]
x <- [1:10]
x <- c(1:10)
y_fits <- vector()
library(tidyverse)
?case_when
server <- function(input, output, session) {
}
library(shiny)
library(tidyverse)
ui <- fluidPage(
"Hello, world!"
)
server <- function(input, output, session) {
}
ui <- fluidPage(
selectInput("dataset", label = "Dataset", choices = ls("package:datasets")),
verbatimTextOutput("summary"),
tableOutput("table")
)
server <- function(input, output, session) {
output$summary <- renderPrint({
dataset <- get(input$dataset, "package:datasets")
summary(dataset)
})
output$table <- renderTable({
dataset <- get(input$dataset, "package:datasets")
dataset
})
}
dataset <- get(input$dataset, "package:datasets")
server <- function(input, output, session) {
# Create a reactive expression
dataset <- reactive({
get(input$dataset, "package:datasets")
})
output$summary <- renderPrint({
# Use a reactive expression by calling it like a function
summary(dataset())
})
output$table <- renderTable({
dataset()
})
}
shinyApp(ui, server)
my_matrix <- matrix((1:12), nrow=3)
print(my_matrix)
print(apply(my_matrix, 2, cumsum))
?cumsum
my_vector <- c(1,5,6,5,12,34,2,5,6,412,334,2,3,45,52,2,31,23,4)
print(sapply(my_vector, function(x)) {
tmp1 <- x*5
return(tmp1)
}
)
print(sapply(my_vector, function(x)) {
tmp1 <- x*5
return(tmp1)
}
)
print(sapply(my_vector, function(x){
tmp1 <- x*5
return(tmp1)
})
)
f <- function(x)x*x; f(8)
View(f)
(function(x,y)x+y)(5,6)
(function(x)x*x)(8)
floor(runif(6, min=0, max=57))
floor(runif(6, min=0, max=57))
library(stortingscrape)
library(tidyverse)
library(tidytext)
library(quanteda)
library(stm)
library(tidyr)
library(viridis)
library(rvest)
library(xml2)
library(httr)
library(SnowballC)
library(spacyr)
install.packages("installr")
library(installr)
updateR()
test <- read.csv("https://adventofcode.com/2022/day/1/input")
library(httr)
GET("https://adventofcode.com/2022/day/1/input")
library(rvest)
read_html(GET("https://adventofcode.com/2022/day/1/input"))
test <- readLines("day1.txt")
setwd("C:/Users/Gard/OneDrive/Documents/advent_of_Code2022")
test <- readLines("data/day1.txt")
test2 <- as.numeric(test)
elves <- tibble(test)
library(tidyverse)
elves <- tibble(test)
elves$number <- NA
which(elf_data$raw == "")
which(elves$raw == "")
which(elves$test == "")
1:which(elves$test == "")
it <- 1
for(i in 1:length(elves)){
if(elves$test == ""){
it <- it + 1
}
elves$number[i] <- it
}
View(elves)
for(i in 1:length(elves)){
if(elves$test[i] == ""){
it <- it + 1
}
elves$number[i] <- it
}
View(elves)
for(i in 1:length(elves)){
if(elves$test[i] == ""){
it <- it + 1
}
elves$number[i] <- it
}
View(elves)
View(elves)
elves$number <- NA
for(i in 1:length(elves)){
if(elves$test[i] == ""){
it <- it + 1
}
elves$number[i] <- it
}
View(elves)
elves$test[3] == ""
elves$test[4] == ""
elves$test[5] == ""
View(elves)
elves$number[3] <- it
View(elves)
View(elves)
length(elves)
for(i in 1:nrows(elves)){
if(elves$test[i] == ""){
it <- it + 1
}
elves$number[i] <- it
}
for(i in 1:nrow(elves)){
if(elves$test[i] == ""){
it <- it + 1
}
elves$number[i] <- it
}
View(elves)
View(elves)
elves2 <- elves %>%
filter(!(test == ""))
elves2 <- elves %>%
filter(!(test == "")) %>%
group_by(number) %>%
summarise(cal_amount = sum(test))
elves2 <- elves %>%
filter(!(test == "")) %>%
mutate(test = as.numeric(test))
elves2 <- elves %>%
filter(!(test == "")) %>%
mutate(test = as.numeric(test)) %>%
group_by(number) %>%
summarise(cal_amount = sum(test))
View(elves2)
max(elves2$cal_amount)
elves3 <- elves2 %>%
arrange(desc(elves2$cal_amount))
View(elves3)
sum(elves3[1:3])
sum(elves3$cal_amount[1:3])
rm(list=ls())
datastuff <- readLines("data/day2.txt")
datastuff2 <- tibble(datastuff)
View(datastuff2)
datastuff2 <- datastuff2 %>%
mutate(res_score = case_when(
str_detect(datastuff, "A") & str_detect(datastuff, "X") ~ 4,
str_detect(datastuff, "A") & str_detect(datastuff, "Y") ~ 8,
str_detect(datastuff, "A") & str_detect(datastuff, "Z") ~ 3,
str_detect(datastuff, "B") & str_detect(datastuff, "X") ~ 1,
str_detect(datastuff, "B") & str_detect(datastuff, "Y") ~ 5,
str_detect(datastuff, "B") & str_detect(datastuff, "Z") ~ 9,
str_detect(datastuff, "C") & str_detect(datastuff, "X") ~ 7,
str_detect(datastuff, "C") & str_detect(datastuff, "Y") ~ 2,
str_detect(datastuff, "C") & str_detect(datastuff, "Z") ~ 6
))
View(datastuff2)
sum(datastuff2$res_score)
datastuff2 <- datastuff2 %>%
mutate(res_score = case_when(
str_detect(datastuff, "A") & str_detect(datastuff, "X") ~ 1,
str_detect(datastuff, "A") & str_detect(datastuff, "Y") ~ 4,
str_detect(datastuff, "A") & str_detect(datastuff, "Z") ~ 7,
str_detect(datastuff, "B") & str_detect(datastuff, "X") ~ 2,
str_detect(datastuff, "B") & str_detect(datastuff, "Y") ~ 5,
str_detect(datastuff, "B") & str_detect(datastuff, "Z") ~ 8,
str_detect(datastuff, "C") & str_detect(datastuff, "X") ~ 3,
str_detect(datastuff, "C") & str_detect(datastuff, "Y") ~ 6,
str_detect(datastuff, "C") & str_detect(datastuff, "Z") ~ 9
))
sum(datastuff2$res_score)
readLines("data/day2.txt") %>%
tibble(input = .) %>%
tidyr::separate(input, into = c("first", "second")) %>%
mutate(strat = case_when(first == "A" & second == "X" ~ "lose;s",
first == "A" & second == "Y" ~ "draw;r",
first == "A" & second == "Z" ~ "win;p",
first == "B" & second == "X" ~ "lose;r",
first == "B" & second == "Y" ~ "draw;p",
first == "B" & second == "Z" ~ "win;s",
first == "C" & second == "X" ~ "lose;p",
first == "C" & second == "Y" ~ "draw;s",
first == "C" & second == "Z" ~ "win;r")) %>%
tidyr::separate(strat, into = c("result", "strat")) %>%
mutate(result = case_when(result == "lose" ~ 0,
result == "draw" ~ 3,
result == "win" ~ 6),
strat = case_when(strat == "r" ~ 1,
strat == "p" ~ 2,
strat == "s" ~ 3),
score = result + strat) %>%
pull(score) %>%
sum()
datastuff2 <- datastuff2 %>%
mutate(res_score = case_when(
str_detect(datastuff, "A") & str_detect(datastuff, "X") ~ 3,
str_detect(datastuff, "A") & str_detect(datastuff, "Y") ~ 4,
str_detect(datastuff, "A") & str_detect(datastuff, "Z") ~ 8,
str_detect(datastuff, "B") & str_detect(datastuff, "X") ~ 1,
str_detect(datastuff, "B") & str_detect(datastuff, "Y") ~ 5,
str_detect(datastuff, "B") & str_detect(datastuff, "Z") ~ 9,
str_detect(datastuff, "C") & str_detect(datastuff, "X") ~ 2,
str_detect(datastuff, "C") & str_detect(datastuff, "Y") ~ 6,
str_detect(datastuff, "C") & str_detect(datastuff, "Z") ~ 7
))
sum(datastuff2$res_score)
