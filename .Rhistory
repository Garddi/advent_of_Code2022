head_pos <- c(head_pos[1]-1, head_pos[2])
}
if(moveset$dir[i] == "D"){
head_pos <- c(head_pos[1]+1, head_pos[2])
}
if(moveset$dir[i] == "L"){
head_pos <- c(head_pos[1], head_pos[2]-1)
}
if(moveset$dir[i] == "R"){
head_pos <- c(head_pos[1], head_pos[2]+1)
}
if(all((head_pos - sec_pos) %in% c(-1:1))){
next
}else{
if((head_pos[1] - sec_pos[1]) == -2){
sec_pos <- c(head_pos[1]+1, head_pos[2])
}
if((head_pos[1] - sec_pos[1]) == 2){
sec_pos <- c(head_pos[1]-1, head_pos[2])
}
if((head_pos[2] - sec_pos[2]) == -2){
sec_pos <- c(head_pos[1], head_pos[2]+1)
}
if((head_pos[2] - sec_pos[2]) == 2){
sec_pos <- c(head_pos[1], head_pos[2]-1)
}
if(all((sec_pos - thr_pos) %in% c(-1:1))){
next
}else{
if((sec_pos[1] - thr_pos[1]) == -2){
thr_pos <- c(sec_pos[1]+1, sec_pos[2])
}
if((sec_pos[1] - thr_pos[1]) == 2){
thr_pos <- c(sec_pos[1]-1, sec_pos[2])
}
if((sec_pos[2] - thr_pos[2]) == -2){
thr_pos <- c(sec_pos[1], sec_pos[2]+1)
}
if((sec_pos[2] - thr_pos[2]) == 2){
thr_pos <- c(sec_pos[1], sec_pos[2]-1)
}
if(all((thr_pos - frth_pos) %in% c(-1:1))){
next
}else{
if((thr_pos[1] - frth_pos[1]) == -2){
frth_pos <- c(thr_pos[1]+1, thr_pos[2])
}
if((thr_pos[1] - frth_pos[1]) == 2){
frth_pos <- c(thr_pos[1]-1, thr_pos[2])
}
if((thr_pos[2] - frth_pos[2]) == -2){
frth_pos <- c(thr_pos[1], thr_pos[2]+1)
}
if((thr_pos[2] - frth_pos[2] == 2)){
frth_pos <- c(thr_pos[1], thr_pos[2]-1)
}
if(all((frth_pos - fifth_pos) %in% c(-1:1))){
next
}else{
if((frth_pos[1] - fifth_pos[1]) == -2){
fifth_pos <- c(frth_pos[1]+1, frth_pos[2])
}
if((frth_pos[1] - fifth_pos[1]) == 2){
fifth_pos <- c(frth_pos[1]-1, frth_pos[2])
}
if((frth_pos[2] - fifth_pos[1]) == -2){
fifth_pos <- c(frth_pos[1], frth_pos[2]+1)
}
if((frth_pos[2] - fifth_pos[2] == 2)){
fifth_pos <- c(frth_pos[1], frth_pos[2]-1)
}
if(all((fifth_pos - sxth_pos) %in% c(-1:1))){
next
}else{
if((fifth_pos[1] - sxth_pos[1]) == -2){
sxth_pos <- c(fifth_pos[1]+1, fifth_pos[2])
}
if((fifth_pos[1] - sxth_pos[1]) == 2){
sxth_pos <- c(fifth_pos[1]-1, fifth_pos[2])
}
if((fifth_pos[2] - sxth_pos[2]) == -2){
sxth_pos <- c(fifth_pos[1], fifth_pos[2]+1)
}
if((fifth_pos[2] - sxth_pos[2]) == 2){
sxth_pos <- c(fifth_pos[1], fifth_pos[2]-1)
}
if(all((sxth_pos - svn_pos) %in% c(-1:1))){
next
}else{
if((sxth_pos[1] - svn_pos[1]) == -2){
svn_pos <- c(sxth_pos[1]+1, sxth_pos[2])
}
if((sxth_pos[1] - svn_pos[1]) == 2){
svn_pos <- c(sxth_pos[1]-1, sxth_pos[2])
}
if((sxth_pos[2] - svn_pos[2]) == -2){
svn_pos <- c(sxth_pos[1], sxth_pos[2]+1)
}
if((sxth_pos[2] - svn_pos[2]) == 2){
svn_pos <- c(sxth_pos[1], sxth_pos[2]-1)
}
if(all((svn_pos - eight_pos) %in% c(-1:1))){
next
}else{
if((svn_pos[1] - eight_pos[1]) == -2){
eight_pos <- c(svn_pos[1]+1, svn_pos[2])
}
if((svn_pos[1] - eight_pos[1]) == 2){
eight_pos <- c(svn_pos[1]-1, svn_pos[2])
}
if((svn_pos[2] - eight_pos[2]) == -2){
eight_pos <- c(svn_pos[1], svn_pos[2]+1)
}
if((svn_pos[2] - eight_pos[2]) == 2){
eight_pos <- c(svn_pos[1], svn_pos[2]-1)
}
if(all((eight_pos - ninth_pos) %in% c(-1:1))){
next
}else{
if((eight_pos[1] - ninth_pos[1]) == -2){
ninth_pos <- c(eight_pos[1]+1, eight_pos[2])
}
if((eight_pos[1] - ninth_pos[1]) == 2){
ninth_pos <- c(eight_pos[1]-1, eight_pos[2])
}
if((eight_pos[2] - ninth_pos[2]) == -2){
ninth_pos <- c(eight_pos[1], eight_pos[2]+1)
}
if((eight_pos[2] - ninth_pos[2]) == 2){
ninth_pos <- c(eight_pos[1], eight_pos[2]-1)
}
if(all((ninth_pos - tenth_pos) %in% c(-1:1))){
next
}else{
if((ninth_pos[1] - tenth_pos[1]) == -2){
tenth_pos <- c(ninth_pos[1]+1, ninth_pos[2])
}
if((ninth_pos[1] - tenth_pos[1]) == 2){
tenth_pos <- c(ninth_pos[1]-1, ninth_pos[2])
}
if((ninth_pos[2] - tenth_pos[2]) == -2){
tenth_pos <- c(ninth_pos[1], ninth_pos[2]+1)
}
if((ninth_pos[2] - tenth_pos[2]) == 2){
tenth_pos <- c(ninth_pos[1], ninth_pos[2]-1)
}
}
}
}
}
}
}
}
}
}
}
}
sum(playfield)
playfield[500, 500]
playfield <- matrix(data = FALSE, nrow = 1000, ncol = 1000)
head_pos <- c(500, 500)
sec_pos <- c(500, 500)
thr_pos <- c(500, 500)
frth_pos <- c(500, 500)
fifth_pos <- c(500, 500)
sxth_pos <- c(500, 500)
svn_pos <- c(500, 500)
eight_pos <- c(500, 500)
ninth_pos <- c(500, 500)
tenth_pos <- c(500, 500)
for(i in 1:nrow(moveset)){
for(j in 1:moveset$steps[i]){
playfield[tenth_pos[1], tenth_pos[2]] <- TRUE
if(moveset$dir[i] == "U"){
head_pos <- c(head_pos[1]-1, head_pos[2])
}
if(moveset$dir[i] == "D"){
head_pos <- c(head_pos[1]+1, head_pos[2])
}
if(moveset$dir[i] == "L"){
head_pos <- c(head_pos[1], head_pos[2]-1)
}
if(moveset$dir[i] == "R"){
head_pos <- c(head_pos[1], head_pos[2]+1)
}
if(all((head_pos - sec_pos) %in% c(-1:1))){
next
}else{
if((head_pos[1] - sec_pos[1]) == -2){
sec_pos <- c(head_pos[1]+1, head_pos[2])
}
if((head_pos[1] - sec_pos[1]) == 2){
sec_pos <- c(head_pos[1]-1, head_pos[2])
}
if((head_pos[2] - sec_pos[2]) == -2){
sec_pos <- c(head_pos[1], head_pos[2]+1)
}
if((head_pos[2] - sec_pos[2]) == 2){
sec_pos <- c(head_pos[1], head_pos[2]-1)
}
if(all((sec_pos - thr_pos) %in% c(-1:1))){
next
}else{
if((sec_pos[1] - thr_pos[1]) == -2){
thr_pos <- c(sec_pos[1]+1, sec_pos[2])
}
if((sec_pos[1] - thr_pos[1]) == 2){
thr_pos <- c(sec_pos[1]-1, sec_pos[2])
}
if((sec_pos[2] - thr_pos[2]) == -2){
thr_pos <- c(sec_pos[1], sec_pos[2]+1)
}
if((sec_pos[2] - thr_pos[2]) == 2){
thr_pos <- c(sec_pos[1], sec_pos[2]-1)
}
if(all((thr_pos - frth_pos) %in% c(-1:1))){
next
}else{
if((thr_pos[1] - frth_pos[1]) == -2){
frth_pos <- c(thr_pos[1]+1, thr_pos[2])
}
if((thr_pos[1] - frth_pos[1]) == 2){
frth_pos <- c(thr_pos[1]-1, thr_pos[2])
}
if((thr_pos[2] - frth_pos[2]) == -2){
frth_pos <- c(thr_pos[1], thr_pos[2]+1)
}
if((thr_pos[2] - frth_pos[2] == 2)){
frth_pos <- c(thr_pos[1], thr_pos[2]-1)
}
if(all((frth_pos - fifth_pos) %in% c(-1:1))){
next
}else{
if((frth_pos[1] - fifth_pos[1]) == -2){
fifth_pos <- c(frth_pos[1]+1, frth_pos[2])
}
if((frth_pos[1] - fifth_pos[1]) == 2){
fifth_pos <- c(frth_pos[1]-1, frth_pos[2])
}
if((frth_pos[2] - fifth_pos[1]) == -2){
fifth_pos <- c(frth_pos[1], frth_pos[2]+1)
}
if((frth_pos[2] - fifth_pos[2] == 2)){
fifth_pos <- c(frth_pos[1], frth_pos[2]-1)
}
if(all((fifth_pos - sxth_pos) %in% c(-1:1))){
next
}else{
if((fifth_pos[1] - sxth_pos[1]) == -2){
sxth_pos <- c(fifth_pos[1]+1, fifth_pos[2])
}
if((fifth_pos[1] - sxth_pos[1]) == 2){
sxth_pos <- c(fifth_pos[1]-1, fifth_pos[2])
}
if((fifth_pos[2] - sxth_pos[2]) == -2){
sxth_pos <- c(fifth_pos[1], fifth_pos[2]+1)
}
if((fifth_pos[2] - sxth_pos[2]) == 2){
sxth_pos <- c(fifth_pos[1], fifth_pos[2]-1)
}
if(all((sxth_pos - svn_pos) %in% c(-1:1))){
next
}else{
if((sxth_pos[1] - svn_pos[1]) == -2){
svn_pos <- c(sxth_pos[1]+1, sxth_pos[2])
}
if((sxth_pos[1] - svn_pos[1]) == 2){
svn_pos <- c(sxth_pos[1]-1, sxth_pos[2])
}
if((sxth_pos[2] - svn_pos[2]) == -2){
svn_pos <- c(sxth_pos[1], sxth_pos[2]+1)
}
if((sxth_pos[2] - svn_pos[2]) == 2){
svn_pos <- c(sxth_pos[1], sxth_pos[2]-1)
}
if(all((svn_pos - eight_pos) %in% c(-1:1))){
next
}else{
if((svn_pos[1] - eight_pos[1]) == -2){
eight_pos <- c(svn_pos[1]+1, svn_pos[2])
}
if((svn_pos[1] - eight_pos[1]) == 2){
eight_pos <- c(svn_pos[1]-1, svn_pos[2])
}
if((svn_pos[2] - eight_pos[2]) == -2){
eight_pos <- c(svn_pos[1], svn_pos[2]+1)
}
if((svn_pos[2] - eight_pos[2]) == 2){
eight_pos <- c(svn_pos[1], svn_pos[2]-1)
}
if(all((eight_pos - ninth_pos) %in% c(-1:1))){
next
}else{
if((eight_pos[1] - ninth_pos[1]) == -2){
ninth_pos <- c(eight_pos[1]+1, eight_pos[2])
}
if((eight_pos[1] - ninth_pos[1]) == 2){
ninth_pos <- c(eight_pos[1]-1, eight_pos[2])
}
if((eight_pos[2] - ninth_pos[2]) == -2){
ninth_pos <- c(eight_pos[1], eight_pos[2]+1)
}
if((eight_pos[2] - ninth_pos[2]) == 2){
ninth_pos <- c(eight_pos[1], eight_pos[2]-1)
}
if(all((ninth_pos - tenth_pos) %in% c(-1:1))){
next
}else{
if((ninth_pos[1] - tenth_pos[1]) == -2){
tenth_pos <- c(ninth_pos[1]+1, ninth_pos[2])
}
if((ninth_pos[1] - tenth_pos[1]) == 2){
tenth_pos <- c(ninth_pos[1]-1, ninth_pos[2])
}
if((ninth_pos[2] - tenth_pos[2]) == -2){
tenth_pos <- c(ninth_pos[1], ninth_pos[2]+1)
}
if((ninth_pos[2] - tenth_pos[2]) == 2){
tenth_pos <- c(ninth_pos[1], ninth_pos[2]-1)
}
}
}
}
}
}
}
}
}
}
}
}
sum(playfield)
playfield[500, 500]
playfield[735,478]
playfield <- matrix(data = FALSE, nrow = 50, ncol = 50)
moveset <- data.frame(dir = c("R", "U", "L", "D", "R", "D", "L", "U"),
steps = c(5,8,8,3,17,10,25,20))
head_pos <- c(25, 25)
sec_pos <- c(25, 25)
thr_pos <- c(25, 25)
frth_pos <- c(25, 25)
fifth_pos <- c(25, 25)
sxth_pos <- c(25, 25)
svn_pos <- c(25, 25)
eight_pos <- c(25, 25)
ninth_pos <- c(25, 25)
tenth_pos <- c(25, 25)
for(i in 1:nrow(moveset)){
for(j in 1:moveset$steps[i]){
playfield[tenth_pos[1], tenth_pos[2]] <- TRUE
if(moveset$dir[i] == "U"){
head_pos <- c(head_pos[1]-1, head_pos[2])
}
if(moveset$dir[i] == "D"){
head_pos <- c(head_pos[1]+1, head_pos[2])
}
if(moveset$dir[i] == "L"){
head_pos <- c(head_pos[1], head_pos[2]-1)
}
if(moveset$dir[i] == "R"){
head_pos <- c(head_pos[1], head_pos[2]+1)
}
if(all((head_pos - sec_pos) %in% c(-1:1))){
next
}else{
if((head_pos[1] - sec_pos[1]) == -2){
sec_pos <- c(head_pos[1]+1, head_pos[2])
}
if((head_pos[1] - sec_pos[1]) == 2){
sec_pos <- c(head_pos[1]-1, head_pos[2])
}
if((head_pos[2] - sec_pos[2]) == -2){
sec_pos <- c(head_pos[1], head_pos[2]+1)
}
if((head_pos[2] - sec_pos[2]) == 2){
sec_pos <- c(head_pos[1], head_pos[2]-1)
}
if(all((sec_pos - thr_pos) %in% c(-1:1))){
next
}else{
if((sec_pos[1] - thr_pos[1]) == -2){
thr_pos <- c(sec_pos[1]+1, sec_pos[2])
}
if((sec_pos[1] - thr_pos[1]) == 2){
thr_pos <- c(sec_pos[1]-1, sec_pos[2])
}
if((sec_pos[2] - thr_pos[2]) == -2){
thr_pos <- c(sec_pos[1], sec_pos[2]+1)
}
if((sec_pos[2] - thr_pos[2]) == 2){
thr_pos <- c(sec_pos[1], sec_pos[2]-1)
}
if(all((thr_pos - frth_pos) %in% c(-1:1))){
next
}else{
if((thr_pos[1] - frth_pos[1]) == -2){
frth_pos <- c(thr_pos[1]+1, thr_pos[2])
}
if((thr_pos[1] - frth_pos[1]) == 2){
frth_pos <- c(thr_pos[1]-1, thr_pos[2])
}
if((thr_pos[2] - frth_pos[2]) == -2){
frth_pos <- c(thr_pos[1], thr_pos[2]+1)
}
if((thr_pos[2] - frth_pos[2] == 2)){
frth_pos <- c(thr_pos[1], thr_pos[2]-1)
}
if(all((frth_pos - fifth_pos) %in% c(-1:1))){
next
}else{
if((frth_pos[1] - fifth_pos[1]) == -2){
fifth_pos <- c(frth_pos[1]+1, frth_pos[2])
}
if((frth_pos[1] - fifth_pos[1]) == 2){
fifth_pos <- c(frth_pos[1]-1, frth_pos[2])
}
if((frth_pos[2] - fifth_pos[1]) == -2){
fifth_pos <- c(frth_pos[1], frth_pos[2]+1)
}
if((frth_pos[2] - fifth_pos[2] == 2)){
fifth_pos <- c(frth_pos[1], frth_pos[2]-1)
}
if(all((fifth_pos - sxth_pos) %in% c(-1:1))){
next
}else{
if((fifth_pos[1] - sxth_pos[1]) == -2){
sxth_pos <- c(fifth_pos[1]+1, fifth_pos[2])
}
if((fifth_pos[1] - sxth_pos[1]) == 2){
sxth_pos <- c(fifth_pos[1]-1, fifth_pos[2])
}
if((fifth_pos[2] - sxth_pos[2]) == -2){
sxth_pos <- c(fifth_pos[1], fifth_pos[2]+1)
}
if((fifth_pos[2] - sxth_pos[2]) == 2){
sxth_pos <- c(fifth_pos[1], fifth_pos[2]-1)
}
if(all((sxth_pos - svn_pos) %in% c(-1:1))){
next
}else{
if((sxth_pos[1] - svn_pos[1]) == -2){
svn_pos <- c(sxth_pos[1]+1, sxth_pos[2])
}
if((sxth_pos[1] - svn_pos[1]) == 2){
svn_pos <- c(sxth_pos[1]-1, sxth_pos[2])
}
if((sxth_pos[2] - svn_pos[2]) == -2){
svn_pos <- c(sxth_pos[1], sxth_pos[2]+1)
}
if((sxth_pos[2] - svn_pos[2]) == 2){
svn_pos <- c(sxth_pos[1], sxth_pos[2]-1)
}
if(all((svn_pos - eight_pos) %in% c(-1:1))){
next
}else{
if((svn_pos[1] - eight_pos[1]) == -2){
eight_pos <- c(svn_pos[1]+1, svn_pos[2])
}
if((svn_pos[1] - eight_pos[1]) == 2){
eight_pos <- c(svn_pos[1]-1, svn_pos[2])
}
if((svn_pos[2] - eight_pos[2]) == -2){
eight_pos <- c(svn_pos[1], svn_pos[2]+1)
}
if((svn_pos[2] - eight_pos[2]) == 2){
eight_pos <- c(svn_pos[1], svn_pos[2]-1)
}
if(all((eight_pos - ninth_pos) %in% c(-1:1))){
next
}else{
if((eight_pos[1] - ninth_pos[1]) == -2){
ninth_pos <- c(eight_pos[1]+1, eight_pos[2])
}
if((eight_pos[1] - ninth_pos[1]) == 2){
ninth_pos <- c(eight_pos[1]-1, eight_pos[2])
}
if((eight_pos[2] - ninth_pos[2]) == -2){
ninth_pos <- c(eight_pos[1], eight_pos[2]+1)
}
if((eight_pos[2] - ninth_pos[2]) == 2){
ninth_pos <- c(eight_pos[1], eight_pos[2]-1)
}
if(all((ninth_pos - tenth_pos) %in% c(-1:1))){
next
}else{
if((ninth_pos[1] - tenth_pos[1]) == -2){
tenth_pos <- c(ninth_pos[1]+1, ninth_pos[2])
}
if((ninth_pos[1] - tenth_pos[1]) == 2){
tenth_pos <- c(ninth_pos[1]-1, ninth_pos[2])
}
if((ninth_pos[2] - tenth_pos[2]) == -2){
tenth_pos <- c(ninth_pos[1], ninth_pos[2]+1)
}
if((ninth_pos[2] - tenth_pos[2]) == 2){
tenth_pos <- c(ninth_pos[1], ninth_pos[2]-1)
}
}
}
}
}
}
}
}
}
}
}
}
sum(playfield)
playfield[500, 500]
playfield[735,478]
View(playfield)
